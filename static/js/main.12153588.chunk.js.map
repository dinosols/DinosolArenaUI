{"version":3,"sources":["Components/TextBox.js","Components/Attacks.js","Components/EnemyAvatar.js","Components/EnemyBox.js","Components/PlayerAvatar.js","Components/PlayerBox.js","Components/PlayAgain.js","App.js","index.js"],"names":["TextBox","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","messageOne","messageTwo","Component","Attacks","_this","_this$props$details","details","name","damage","onClick","handleAttackClick","EnemyAvatar","anim","faint","enemyFaint","src","alt","PureComponent","EnemyBox","progressColor","percentage","enemyHP","enemyMaxHP","num","id","enemyName","enemyLevel","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","EnemyAvatar_EnemyAvatar","playerFaint","PlayerBox","playerHP","playerMaxHP","PlayerAvatar_EnemyAvatar","playerName","playerLevel","PlayAgain","handlePlayAgain","App","state","playerAttacks","attackOne","attackTwo","attackThree","attackFour","enemyAttackNames","enemyAttackDamage","textMessageOne","textMessageTwo","gameOver","startingSequence","setTimeout","setState","concat","enemyTurn","enemyAttackName","Math","floor","random","prevState","enemyAttack","console","log","_this2","Components_EnemyBox","Components_PlayerBox","Components_TextBox","keys","map","index","Components_Attacks","Components_PlayAgain","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.12153588.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class TextBox extends Component {\n  render() {\n    return (\n      <div className=\"battle-text-content\">\n        <p>\n          {this.props.messageOne} <br /> {this.props.messageTwo}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default TextBox;\n","import React, { Component } from \"react\";\r\n\r\nexport class Attacks extends Component {\r\n  render() {\r\n    const { name, damage } = this.props.details;\r\n    return (\r\n      <div className=\"attack-container\">\r\n        <div>\r\n          <span\r\n            className=\"move-pointer\"\r\n            onClick={() => this.props.handleAttackClick(name, damage)}\r\n          >\r\n            {name}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Attacks;\r\n","import React, { PureComponent } from \"react\";\n\nexport default class EnemyAvatar extends PureComponent {\n  render() {\n    let faint = this.props.enemyFaint;\n    let anim;\n    if (faint === true) {\n      anim = \"animated fadeOut slow\";\n    }\n    if (faint === false) {\n      anim = \"animated zoomIn slow\";\n    }\n    if (faint === \"\") {\n      anim = \"hide\";\n    }\n    return (\n      <div className={anim}>\n        <img className=\"avatar mr-3 mt-4\" src=\"/img/enemy.png\" alt=\"\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport EnemyAvatar from \"./EnemyAvatar\";\n\nexport class EnemyBox extends Component {\n  render() {\n    // calc enemy progress bar percentage based on HP\n    let percentage = (this.props.enemyHP / this.props.enemyMaxHP) * 100 + \"%\";\n    let num = (this.props.enemyHP / this.props.enemyMaxHP) * 100;\n    let progressColor;\n\n    // use enemy progress bar calc to style colors\n    if (num <= 25) {\n      progressColor = \"progress-bar bg-danger\";\n    } else if (num <= 50) {\n      progressColor = \"progress-bar bg-warning\";\n    } else if (num > 50) {\n      progressColor = \"progress-bar bg-success\";\n    }\n    return (\n      <div>\n        {/* ENEMY POKEMON CONTAINER */}\n        <div id=\"enemy-container\">\n          {/* ENEMY POKEMON INFO BOX */}\n          <div id=\"enemy-info-box\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h2 id=\"enemy-name\">{this.props.enemyName}</h2>\n              <h5 className=\"mr-1 d-none d-sm-block\">\n                Lv\n                {this.props.enemyLevel}\n              </h5>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center ml-3 mr-1\">\n              <h5>HP</h5>\n              <div className=\"progress ml-1 both-progress\">\n                <div\n                  className={progressColor}\n                  role=\"progressbar\"\n                  style={{ width: percentage }}\n                  aria-valuenow=\"75\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                />\n              </div>\n            </div>\n          </div>\n          {/* END ENEMY POKEMON INFO BOX */}\n\n          {/* ENEMY POKEMON AVATAR PICTURE */}\n          <div className=\"mr-sm-4 avatar-box\">\n            <EnemyAvatar enemyFaint={this.props.enemyFaint} />\n\n            <div className=\"oval\" />\n          </div>\n          {/* END ENEMY POKEMON AVATAR PICTURE */}\n        </div>\n        {/* END ENEMY POKEMON CONTAINER */}\n      </div>\n    );\n  }\n}\n\nexport default EnemyBox;\n","import React, { PureComponent } from \"react\";\n\nexport default class EnemyAvatar extends PureComponent {\n  render() {\n    let faint = this.props.playerFaint;\n    let anim;\n    if (faint === true) {\n      anim = \"animated fadeOut slow\";\n    }\n    if (faint === false) {\n      anim = \"animated \tfadeInUp\";\n    }\n    if (faint === \"\") {\n      anim = \"hide\";\n    }\n    return (\n      <div className={anim}>\n        <img className=\"avatar mx-2\" src=\"/img/hero.png\" alt=\"\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PlayerAvatar from \"./PlayerAvatar\";\n\nexport class PlayerBox extends Component {\n  render() {\n    // calc player progress bar percentage based on HP\n    let percentage = (this.props.playerHP / this.props.playerMaxHP) * 100 + \"%\";\n    let num = (this.props.playerHP / this.props.playerMaxHP) * 100;\n    let progressColor;\n\n    // use player progress bar calc to style colors\n    if (num <= 25) {\n      progressColor = \"progress-bar bg-danger\";\n    } else if (num <= 50) {\n      progressColor = \"progress-bar bg-warning\";\n    } else if (num > 50) {\n      progressColor = \"progress-bar bg-success\";\n    }\n    return (\n      <div>\n        {/* HERO POKEMON CONTAINER */}\n        <div id=\"hero-container\">\n          {/* HERO POKEMON AVATAR PICTURE */}\n          <div className=\"avatar-box ml-sm-5\">\n            <PlayerAvatar playerFaint={this.props.playerFaint} />\n\n            <div className=\"oval\" />\n          </div>\n          {/* END HERO POKEMON AVATAR PICTURE */}\n\n          {/* HERO POKEMON INFO BOX */}\n          <div id=\"hero-info-box\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <h2 id=\"hero-name\">{this.props.playerName}</h2>\n              <h5 className=\"mr-1 d-none d-sm-block\">\n                Lv\n                {this.props.playerLevel}\n              </h5>\n            </div>\n            <div className=\"d-flex justify-content-between align-items-center ml-3 mr-1\">\n              <h5>HP</h5>\n              <div className=\"progress ml-1 both-progress\">\n                <div\n                  className={progressColor}\n                  role=\"progressbar\"\n                  style={{ width: percentage }}\n                  aria-valuenow=\"75\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                />\n              </div>\n            </div>\n            <div id=\"hero-hp\" className=\"d-flex\">\n              <div className=\"ml-auto mr-3\">\n                <h5>\n                  {this.props.playerHP}/{this.props.playerMaxHP}\n                </h5>\n              </div>\n            </div>\n          </div>\n          {/* END HERO POKEMON INFO BOX */}\n        </div>\n        {/* END HERO POKEMON CONTAINER */}\n      </div>\n    );\n  }\n}\n\nexport default PlayerBox;\n","import React, { Component } from \"react\";\r\n\r\nexport class PlayAgain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"battle-text-content\">\r\n        <p id=\"play-again-text\" onClick={() => this.props.handlePlayAgain()}>\r\n          Click Here To Play Again\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayAgain;\r\n","import React, { Component } from \"react\";\nimport \"./animate.css\";\nimport \"./bootstrap.css\";\nimport \"./App.css\";\nimport TextBox from \"./Components/TextBox\";\nimport Attacks from \"./Components/Attacks\";\nimport EnemyBox from \"./Components/EnemyBox\";\nimport PlayerBox from \"./Components/PlayerBox\";\nimport PlayAgain from \"./Components/PlayAgain\";\n\nclass App extends Component {\n  state = {\n    playerName: \"Blastoise\",\n    playerLevel: 45,\n    playerHP: 200,\n    playerMaxHP: 200,\n    playerAttacks: {\n      attackOne: { name: \"Bite\", damage: 10 },\n      attackTwo: { name: \"Surf\", damage: 30 },\n      attackThree: { name: \"Water Gun\", damage: 35 },\n      attackFour: { name: \"Hydro Pump\", damage: 45 }\n    },\n    playerFaint: \"\",\n    enemyName: \"Gengar\",\n    enemyLevel: 43,\n    enemyHP: 200,\n    enemyMaxHP: 200,\n    enemyAttackNames: [\"Hex\", \"Shadow Ball\", \"Dream Eater\", \"Nightmare\"],\n    enemyAttackDamage: [10, 30, 35, 45],\n    enemyFaint: \"\",\n    textMessageOne: \" \",\n    textMessageTwo: \"\",\n    gameOver: false\n  };\n\n  componentDidMount() {\n    this.startingSequence();\n  }\n\n  componentDidUpdate() {}\n\n  startingSequence = () => {\n    setTimeout(() => {\n      this.setState(\n        () => {\n          return {\n            textMessageOne: `A wild ${this.state.enemyName} appeared!`,\n            enemyFaint: false\n          };\n        },\n        () => {\n          setTimeout(() => {\n            this.setState(\n              {\n                textMessageOne: `Go ${this.state.playerName}!`,\n                playerFaint: false\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({\n                    textMessageOne: \"\"\n                  });\n                }, 3000);\n              }\n            );\n          }, 3000);\n        }\n      );\n    }, 1000);\n  };\n\n  enemyTurn = (enemyAttackName, enemyAttackDamage) => {\n    enemyAttackDamage = enemyAttackDamage + Math.floor(Math.random() * 11);\n    // first, check if enemy fainted. End Game if they did.\n    if (this.state.enemyHP === 0) {\n      this.setState(\n        {\n          textMessageOne: `${this.state.enemyName} fainted.`,\n          textMessageTwo: `${this.state.playerName} wins!`,\n          enemyFaint: true\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              gameOver: true\n            });\n          }, 3000);\n        }\n      );\n    } else {\n      // if enemy is still alive, proceed with enemy turn\n\n      this.setState(\n        prevState => {\n          if (prevState.playerHP - enemyAttackDamage <= 0) {\n            return {\n              playerHP: 0,\n              textMessageOne: `${\n                this.state.enemyName\n              } used ${enemyAttackName} for ${enemyAttackDamage} damage!`\n            };\n          } else {\n            return {\n              playerHP: prevState.playerHP - enemyAttackDamage,\n              textMessageOne: `${\n                this.state.enemyName\n              } used ${enemyAttackName} for ${enemyAttackDamage} damage!`\n            };\n          }\n        },\n        () => {\n          setTimeout(() => {\n            if (this.state.playerHP === 0) {\n              this.setState(\n                {\n                  textMessageOne: `${this.state.playerName} fainted.`,\n                  textMessageTwo: `${this.state.enemyName} wins!`,\n                  playerFaint: true\n                },\n                () => {\n                  setTimeout(() => {\n                    this.setState({\n                      gameOver: true\n                    });\n                  }, 3000);\n                }\n              );\n            } else {\n              this.setState({\n                textMessageOne: \"\"\n              });\n            }\n          }, 2000);\n        }\n      );\n    }\n  };\n\n  handleAttackClick = (name, damage) => {\n    // implicit return single value\n    // this.setState(prevState => ({\n    //   enemyHP: prevState.enemyHP - damage\n    // }));\n\n    damage = damage + Math.floor(Math.random() * 11);\n\n    // use attack to calculate enemy HP and adjust progress bar\n    this.setState(\n      prevState => {\n        if (prevState.enemyHP - damage <= 0) {\n          return {\n            enemyHP: 0,\n            textMessageOne: `${\n              this.state.playerName\n            } used ${name} for ${damage} damage!`\n          };\n        } else {\n          return {\n            enemyHP: prevState.enemyHP - damage,\n            textMessageOne: `${\n              this.state.playerName\n            } used ${name} for ${damage} damage!`\n          };\n        }\n      },\n      () => {\n        // wait X seconds before enemy attacks\n        setTimeout(() => {\n          // calc next enemy attack name and damage\n          let enemyAttack = Math.floor(Math.random() * 4);\n          let enemyAttackDamage = this.state.enemyAttackDamage[enemyAttack];\n          let enemyAttackName = this.state.enemyAttackNames[enemyAttack];\n\n          // once the state is changed, start enemy turn\n          this.enemyTurn(enemyAttackName, enemyAttackDamage);\n        }, 3000);\n      }\n    );\n  };\n\n  handlePlayAgain = () => {\n    console.log(\"play again!!!\");\n    this.setState({\n      playerHP: this.state.playerMaxHP,\n      enemyHP: this.state.enemyMaxHP,\n      gameOver: false,\n      textMessageOne: \"\",\n      textMessageTwo: \"\",\n      enemyFaint: false,\n      playerFaint: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row row h-100 justify-content-center align-items-center\">\n          <div className=\"col-sm-12\">\n            {/* BATTLE SCREEN CONTAINER */}\n            <div id=\"battle-container\" className=\"px-2 mx-auto\">\n              <EnemyBox\n                enemyName={this.state.enemyName}\n                enemyLevel={this.state.enemyLevel}\n                enemyHP={this.state.enemyHP}\n                enemyMaxHP={this.state.enemyMaxHP}\n                enemyFaint={this.state.enemyFaint}\n              />\n\n              <PlayerBox\n                playerName={this.state.playerName}\n                playerLevel={this.state.playerLevel}\n                playerHP={this.state.playerHP}\n                playerMaxHP={this.state.playerMaxHP}\n                playerFaint={this.state.playerFaint}\n              />\n\n              {/* TEXT BOX SECTION */}\n              <div id=\"text-box\">\n                <div id=\"text-box-content\">\n                  {this.state.textMessageOne !== \"\" &&\n                    this.state.gameOver === false && (\n                      <TextBox\n                        messageOne={this.state.textMessageOne}\n                        messageTwo={this.state.textMessageTwo}\n                      />\n                    )}\n\n                  {this.state.textMessageOne === \"\" &&\n                    this.state.gameOver === false &&\n                    Object.keys(this.state.playerAttacks).map((key, index) => {\n                      return (\n                        <Attacks\n                          key={key}\n                          index={index}\n                          details={this.state.playerAttacks[key]}\n                          handleAttackClick={this.handleAttackClick}\n                        />\n                      );\n                    })}\n\n                  {this.state.gameOver === true && (\n                    <PlayAgain handlePlayAgain={this.handlePlayAgain} />\n                  )}\n                </div>\n              </div>\n              {/* END TEXT BOX SECTION */}\n            </div>\n            {/* END BATTLE SCREEN CONTAINER */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// registerServiceWorker();\n"],"sourceRoot":""}